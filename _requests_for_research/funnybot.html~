---
title: FunnyBot
summary: ''
difficulty: 2 # out of 3
---

<p>Create a deep neural network capable of generating funny jokes. 
</p>

<p> 
1. Obtain a dataset of pairs of jokes / anecdotes in raw text form and 
corresponding scores assigned to these jokes. Existing datasets:
</p>
<p> 
Pun of the Day dataset: ~2500 puns; 16000 One Liners dataset: ~16000 
one line jokes; See 
[Yang, Diyi, et al. "Humor recognition and humor anchor extraction."](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.696.1901&rep=rep1&type=pdf)
[Jester datasets](http://eigentaste.berkeley.edu/dataset/) : contains around 150 jokes and ratings from large number of users for these jokes.
</p>
<p>
Additional data can be obtained
 by web scraping sites like 
https://www.reddit.com/r/jokes, 
http://funtweets.com/, 
http://funnytweeter.com/ 
and similar sites. 
Please make 
sure to obey the website policies with respect to the web scraping!
</p>

<p>
Ideally you would combine data from multiple sources to increase overall training set.
</p>

<p>
2. Train the biggest baddest [language model](https://arxiv.org/abs/1602.02410) 
on the jokes datasets, similarily as [in this post](http://karpathy.github.io/2015/05/21/rnn-effectiveness/).
Determine if the training setup is sufficient to generate funny jokes or
if the setup needs to be modified.
</p>

<p>Training such neural networks potentially allows to gain more insights
into the nature of humor, and hopefully give life to some good jokes.
</p>

<p>Related literature:
[etrovic, Sasa, and David Matthews. "Unsupervised joke generation from big data." ACL (2). 2013.](http://homepages.inf.ed.ac.uk/s0894589/petrovic13unsupervised.pdf)
</p>

<p>The next step after this research request is solved is to create a 
setup in which created neural network is able to
post the jokes somewhere online where it can get reliable score feedback
for the jokes it generates and improve itself accordingly using RL.
</p>
